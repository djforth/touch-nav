{"version":3,"sources":["../../src/components/touch-nav-item.jsx"],"names":["TouchNavItem","props","listCss","nav_item","active","state","list","getClasses","nextProps","nextState","setState","e","preventDefault","item","cb","callback","data","isMounted","changeActive","id","nav_id","apply","navitem","title","_clicked","bind","name","href","_external","_internal","_renderLink","Component","Object","assign","prototype"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAcMA,Y;;;AACH,0BAAYC,KAAZ,EAAkB;AAAA;;AAAA,8HACXA,KADW;;AAEjB;AACA,YAAKC,OAAL,GAAe,CAAC,eAAD,EAAkB,EAAC,UAAU,MAAKD,KAAL,CAAWE,QAAX,CAAoBC,MAA/B,EAAlB,CAAf;AACA,YAAKC,KAAL,GAAa,EAACC,MAAM,MAAKC,UAAL,CAAgB,MAAKL,OAArB,CAAP,EAAb;AAJiB;AAKlB;;;;4CAEqBM,S,EAAWC,S,EAAU;AACzC,eAAQD,UAAUL,QAAV,CAAmBC,MAAnB,KAA8B,KAAKH,KAAL,CAAWE,QAAX,CAAoBC,MAAnD,IACLK,UAAUH,IAAV,KAAmB,KAAKD,KAAL,CAAWC,IADhC;AAED;;;gDAEyBE,S,EAAU;AAClC,aAAKN,OAAL,GAAe,CAAC,eAAD,EAAkB,EAAC,UAAUM,UAAUL,QAAV,CAAmBC,MAA9B,EAAlB,CAAf;AACA,aAAKM,QAAL,CAAc,EAACJ,MAAM,KAAKC,UAAL,CAAgB,KAAKL,OAArB,CAAP,EAAd;AACD;;;+BAEQS,C,EAAE;AACTA,UAAEC,cAAF;;AAEA,YAAIC,OAAO,KAAKZ,KAAL,CAAWE,QAAtB;AACA,YAAIW,KAAK,KAAKb,KAAL,CAAWc,QAApB;AACA,YAAIC,OAAO,oBAAOH,IAAP,EAAa,OAAb,CAAX;AACA,YAAI,0BAAQI,SAAR,CAAkB,IAAlB,CAAJ,EAA4B;AAC1B,gCAAWC,YAAX,CAAwB,KAAKjB,KAAL,CAAWE,QAAX,CAAoBgB,EAA5C,EAAgD,KAAKlB,KAAL,CAAWmB,MAA3D;AACA,cAAI,0BAAaN,EAAb,CAAJ,EAAqB;AACnBA,eAAGO,KAAH,CAAS,IAAT,EAAe,sBAASL,IAAT,CAAf;AACD;AACF;AACF;;;gCAESM,O,EAAQ;AAChB,eACE;AAAA;AAAA,YAAG,MAAK,GAAR;AACG,mBAAOA,QAAQC,KADlB;AAEG,qBAAS,KAAKC,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAFZ;AAGG,uBAAU,oBAHb;AAIKH,kBAAQI;AAJb,SADF;AAQD;;;gCAEUJ,O,EAAQ;AACjB,eACE;AAAA;AAAA,YAAG,MAAMA,QAAQK,IAAjB;AACG,mBAAOL,QAAQC,KADlB;AAEG,uBAAU,oBAFb;AAGID,kBAAQI;AAHZ,SADF;AAOD;;;kCAEWJ,O,EAAQ;AAClB,eAAQ,mBAAMA,OAAN,EAAe,MAAf,CAAD,GAA2B,KAAKM,SAAL,CAAeN,OAAf,CAA3B,GAAqD,KAAKO,SAAL,CAAeP,OAAf,CAA5D;AACD;;;+BAGO;AACN,YAAIA,UAAU,KAAKrB,KAAL,CAAWE,QAAzB;AACA,eACE;AAAA;AAAA,YAAI,MAAK,cAAT,EAAwB,WAAW,KAAKE,KAAL,CAAWC,IAA9C;AACG,eAAKwB,WAAL,CAAiBR,OAAjB;AADH,SADF;AAKD;;;;IAjEwB,gBAAMS,S;;AAoEjCC,SAAOC,MAAP,CAAcjC,aAAakC,SAA3B;AACAF,SAAOC,MAAP,CAAcjC,aAAakC,SAA3B;AACA;;;oBAGelC,Y","file":"touch-nav-item.js","sourcesContent":[" import React from 'react';\n import _, {omit} from 'lodash';\n\n// Mixins\nimport {\n  checker\n  , css_mixins as cssMixins\n  , text_mixins as textMixins\n} from 'morse-react-mixins';\n\n// Flux\nimport NavActions from '../actions/nav_actions';\nimport NavStore from '../stores/nav_store';\n\nclass TouchNavItem extends React.Component{\n   constructor(props){\n    super(props);\n    // console.log('props', this.props.nav_item);\n    this.listCss = ['date-nav-item', {'active': this.props.nav_item.active}];\n    this.state = {list: this.getClasses(this.listCss)};\n  }\n\n  shouldComponentUpdate(nextProps, nextState){\n    return (nextProps.nav_item.active !== this.props.nav_item.active) ||\n      nextState.list !== this.state.list;\n  }\n\n  componentWillReceiveProps(nextProps){\n    this.listCss = ['date-nav-item', {'active': nextProps.nav_item.active}];\n    this.setState({list: this.getClasses(this.listCss)});\n  }\n\n  _clicked(e){\n    e.preventDefault();\n\n    let item = this.props.nav_item;\n    let cb = this.props.callback;\n    let data = _.omit(item, 'title');\n    if (checker.isMounted(this)){\n      NavActions.changeActive(this.props.nav_item.id, this.props.nav_id);\n      if (_.isFunction(cb)){\n        cb.apply(this, _.values(data));\n      }\n    }\n  }\n\n  _internal(navitem){\n    return (\n      <a href=\"#\"\n         title={navitem.title}\n         onClick={this._clicked.bind(this)}\n         className=\"date-nav-item-link\">\n          {navitem.name}\n      </a>\n    );\n  }\n\n   _external(navitem){\n    return (\n      <a href={navitem.href}\n         title={navitem.title}\n         className=\"date-nav-item-link\">\n         {navitem.name}\n      </a>\n    );\n  }\n\n  _renderLink(navitem){\n    return (_.has(navitem, 'href')) ? this._external(navitem) : this._internal(navitem);\n  }\n\n\n  render(){\n    let navitem = this.props.nav_item;\n    return (\n      <li role=\"presentation\" className={this.state.list}>\n        {this._renderLink(navitem)}\n      </li>\n    );\n  }\n}\n\nObject.assign(TouchNavItem.prototype, cssMixins);\nObject.assign(TouchNavItem.prototype, textMixins);\n// Object.assign(TouchNavItem.prototype, checker);\n\n\nexport default TouchNavItem;\n"]}