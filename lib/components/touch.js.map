{"version":3,"sources":["../../src/components/touch.jsx"],"names":["Touch","props","id","directions","holder_ref","navlist","addingItems","navitems","left","hidden","right","buttonMoveLeft","_buttonMove","bind","buttonMoveRight","pos","state","listWidth","listPos","getNavItems","getClasses","showBtn","vpDetect","addCallback","device","setState","track","getDevice","width","_getWidths","addChangeListener","_onChange","error","info","logErrorToMyService","nextProps","updateItems","removeChangeListener","_showButtons","move","prev","cur","holder","_getHolderWidth","show","setValue","offsetWidth","convertDomlist","querySelectorAll","Math","ceil","getWidths","styles","Object","values","map","v","toString","dir","e","preventDefault","_mover","elms","getAllWidths","length","slice","mover","_getDistance","ni","i","key","createId","name","callback","getDirection","moveX","addMove","touches","_touchCancel","_touchEnd","_touchMove","_touchStart","_setStyle","_renderNav","Component","assign","prototype"],"mappings":"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","file":"touch.js","sourcesContent":["// Libraries\nimport React from 'react';\nimport _ from 'lodash';\n\nimport ViewportDetect from '@djforth/viewport-detection-fp';\n\n// _.mapValues = mapValues;\n\n\nimport {\n  css_mixins as cssMixins\n  , text_mixins as textMixins\n  , widths_mixins as widthsMixins\n} from 'morse-react-mixins';\n\n// Flux\nimport NavActions from '../actions/nav_actions';\nimport NavStore from '../stores/nav_store';\n\n// Utils\nimport touch from '../utils/touch_processing';\n// Components\nimport NavItem from './touch-nav-item';\nimport LeftArrow from './presentational/left_arrow';\n\nclass Touch extends React.Component{\n  constructor(props){\n    super(props);\n\n    let id = _.uniqueId('nav');\n    this.directions;\n    this.holder_ref;\n    this.navlist;\n    NavActions.addingItems(this.props.navitems, id);\n    this.left  = ['nav-mover', 'move-left', {hidden: false}];\n    this.right = ['nav-mover', 'move-right', {hidden: false}];\n    this.buttonMoveLeft = this._buttonMove.bind(this, 'left');\n    this.buttonMoveRight = this._buttonMove.bind(this, 'right');\n    this.pos   = 0;\n    this.state = {listWidth: 1000, listPos: 0, id: id, navitems: NavStore.getNavItems(id), left: this.getClasses(this.left), right: this.getClasses(this.right), showBtn: true};\n  }\n\n  componentDidMount(){\n    this.vpDetect = ViewportDetect();\n    this.vpDetect.addCallback((device)=>{\n      this.setState({device});\n    });\n    this.vpDetect.track();\n    // this.detect = new ViewportDetect();\n    this.device = this.vpDetect.getDevice();\n\n    let width = this._getWidths();\n    this.setState({listWidth: width});\n    // console.log(this.detect.removeCallback(this.vp_id));\n    NavStore.addChangeListener('change', this._onChange.bind(this));\n    // NavStore.addChangeListener(\"adding\", this._onAdd.bind(this));\n  }\n\n  componentDidCatch(error, info){\n    // Display fallback UI\n    // You can also log the error to an error reporting service\n    logErrorToMyService(error, info);\n  }\n\n  componentDidUpdate(){\n    let width = this._getWidths();\n    if (width !== this.state.listWidth){\n      this.setState({listWidth: width});\n    }\n  }\n\n  componentWillReceiveProps(nextProps){\n    if (this.props.navitems !== nextProps.navitems){\n      NavActions.updateItems(nextProps.navitems, this.state.id);\n      this.pos = 0;\n      this.setState({navitems: NavStore.getNavItems(this.state.id), listPos: 0});\n    }\n  }\n\n  componentWillUnmount(){\n    NavStore.removeChangeListener('change', this._onChange);\n  }\n\n  _onViewChange(){\n    this._showButtons(this.state.listWidth);\n    this.setState({listPos: 0});\n  }\n\n  _onChange(){\n    let id = this.state.id;\n    this.setState({navitems: NavStore.getNavItems(id)});\n  }\n\n  _getDistance(move){\n    if (_.isEmpty(move)) return 0;\n\n   return  _.reduce(move, (prev, cur)=>{\n      return prev + cur;\n    });\n  }\n\n  _showButtons(width){\n    let holder = this._getHolderWidth();\n    let show = (width > holder);\n\n    if (show !== this.state.showBtn){\n      this.left = this.setValue(this.left, 'hidden', !show);\n      this.right = this.setValue(this.right, 'hidden', !show);\n\n      this.setState({left: this.getClasses(this.left), right: this.getClasses(this.right), showBtn: show});\n    }\n  }\n\n  _getHolderWidth(){\n    return this.holder_ref.offsetWidth;\n  }\n\n  _getWidths(){\n    if (this.navlist){\n      this.convertDomlist(this.navlist.querySelectorAll('li'));\n      let width = Math.ceil(this.getWidths());\n      this._showButtons(width);\n      return width;\n    }\n\n    return this.state.listWidth;\n  }\n\n  _setStyle(){\n    let styles = {'width': this.state.listWidth, 'left': this.state.listPos};\n    return Object.values(styles).map((v)=>{\n      return `${v.toString()}px`;\n    });\n  }\n\n  _buttonMove(dir, e){\n    e.preventDefault();\n    this._mover(dir);\n  }\n\n  _mover(dir){\n    let elms = this.getAllWidths();\n    if (dir === 'left' && this.pos > 0){\n      this.pos--;\n    } else if ((dir === 'right' && this.pos < elms.length)){\n      this.pos++;\n    }\n\n    let move  = _.map(elms.slice(0, this.pos), 'width');\n    let mover = -this._getDistance(move);\n    let holder = this._getHolderWidth();\n    if (this.state.listWidth+mover < holder){\n      mover = -(this.state.listWidth - holder);\n    }\n\n    this.setState({listPos: mover});\n  }\n\n  _renderNav(){\n    let navitems;\n    if (_.isArray(this.state.navitems)){\n      navitems = _.map(this.state.navitems, (ni, i)=>{\n        let key = this.createId(ni.name, i, 'touchnav');\n\n        return (\n          <NavItem\n            key      = {key}\n            nav_id   = {this.state.id}\n            callback = {this.props.callback}\n            nav_item = {ni}\n         />);\n      });\n    } else {\n      navitems = '';\n    }\n\n    return (_.isEmpty(navitems)) ? '' : navitems;\n  }\n\n  _touchCancel(e){\n    // console.log(\"cancel\", _.first(e.touches))\n  }\n\n  _touchEnd(e){\n    let dir =  this.directions.getDirection();\n    // console.log(\"end\", dir)\n    if (dir.moveX !== ''){\n      this._mover(dir.moveX);\n    }\n  }\n\n  _touchMove(e){\n    this.directions.addMove(e.touches);\n    // console.log(\"move\", _.first(e.touches))\n  }\n\n  _touchStart(e){\n    this.directions = touch(e.touches);\n    // console.log(\"start\", _.first(e.touches))\n  }\n\n  render(){\n    return (\n      <nav className=\"touch-nav\"\n        onTouchCancel={this._touchCancel.bind(this)}\n        onTouchEnd={this._touchEnd.bind(this)}\n        onTouchMove={this._touchMove.bind(this)}\n        onTouchStart={this._touchStart.bind(this)}\n      >\n        <a href=\"#\" className={this.state.left} onClick={this.buttonMoveLeft}>\n        <span className=\"hidden\">right</span>\n        </a>\n        <div className=\"list-holder\" ref={(e)=>{this.holder_ref = e;}}>\n          <ul className=\"nav-items\" style={this._setStyle()} onLoad={this._getWidths.bind(this)} ref={(e)=>{this.navlist = e;}}>\n            {this._renderNav()}\n          </ul>\n        </div>\n        <a href=\"#\" className={this.state.right}  onClick={this.buttonMoveRight}>\n          <span className=\"hidden\">right</span>\n        </a>\n      </nav>\n\n    );\n  }\n}\n\nObject.assign(Touch.prototype, cssMixins);\nObject.assign(Touch.prototype, textMixins);\nObject.assign(Touch.prototype, widthsMixins);\n\nexport default Touch;\n"]}