{"version":3,"sources":["../../src/stores/nav_store.js"],"names":["nav_items","store","emitChange","event","emit","addChangeListener","callback","on","removeChangeListener","removeListener","addNavItems","items","id","push","setItems","changeActive","nav_id","getNavItems","item","active","ni","setNavItems","NavStore","Object","assign","prototype","registeredCallback","payload","action","type","nav","dispatchToken","register","setMaxListeners"],"mappings":"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","file":"nav_store.js","sourcesContent":["import {EventEmitter} from 'events';\nimport _ from 'lodash';\nimport NavDispatcher from '../dispatchers/nav_dispatcher';\n\n\nlet nav_items = [];\n\nconst store = {\n  emitChange(event){\n    this.emit(event);\n  }\n\n  , addChangeListener(event, callback){\n    this.on(event, callback);\n  }\n\n  , removeChangeListener(event, callback){\n    this.removeListener(event, callback);\n  }\n\n  , addNavItems(items, id){\n    id = (id) ? id : _.uniqueId('nav');\n\n    nav_items.push({items: this.setItems(items), id: id});\n  }\n\n  , changeActive(id, nav_id){\n    let items = this.getNavItems(nav_id);\n    items = _.map(items, (item)=>{\n      item.active = (item.id === id);\n      return item;\n    });\n  }\n\n  , getNavItems(id){\n    if (id){\n      let ni = _.find(nav_items, (ni)=>ni.id === id);\n      if (ni) return ni.items;\n    }\n\n    return _.first(nav_items).items;\n  }\n\n  , setNavItems(id, items){\n    nav_items = _.map(nav_items, (ni)=>{\n      if (ni.id === id){\n        ni.items = items;\n      }\n      return ni;\n    });\n  }\n\n  , setItems(items){\n    return _.map(items, (item)=>{\n      if (!_.has(item, 'active')) item.active = false;\n      if (!_.has(item, 'id')) item.id = _.uniqueId();\n      return item;\n    });\n  }\n};\n\n\nconst NavStore = Object.assign({}, EventEmitter.prototype, store);\n\nconst registeredCallback = function(payload){\n  let action = payload.action;\n  switch (action.type){\n    case 'ADDING_NAV':\n      NavStore.addNavItems(action.nav, action.id);\n      NavStore.emitChange('adding');\n      break;\n\n    case 'CHANGE_ACTIVE':\n      NavStore.changeActive(action.id, action.nav_id);\n      NavStore.emitChange('change');\n      break;\n\n    case 'UPDATE_NAV':\n      NavStore.setNavItems(action.id, action.nav);\n      NavStore.emitChange('update');\n      break;\n    }\n};\n\nNavStore.dispatchToken = NavDispatcher.register(registeredCallback);\nNavStore.setMaxListeners(0);\n\nexport default NavStore;\n"]}