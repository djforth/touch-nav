{"version":3,"sources":["../../src/stores/nav_store.js"],"names":[],"mappings":"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","file":"nav_store.js","sourcesContent":["const EventEmitter  = require(\"events\").EventEmitter\n    , assign        = require(\"react/lib/Object.assign\");\n\nconst _ = require(\"lodash/core\");\n\nconst NavDispatcher = require(\"../dispatchers/nav_dispatcher\");\n\n\nlet nav_items = [];\n\nconst store = {\n  emitChange(event) {\n    this.emit(event);\n  },\n\n  addChangeListener(event, callback) {\n    this.on(event, callback);\n  },\n\n  removeChangeListener(event, callback) {\n    this.removeListener(event, callback);\n  },\n\n  addNavItems(items, id){\n    id = (id) ? id : _.uniqueId(\"nav\");\n\n    nav_items.push({items:this.setItems(items), id:id});\n  },\n\n  changeActive(id, nav_id){\n    let items = this.getNavItems(nav_id);\n    items = _.map(items, (item)=>{\n      item.active = (item.id === id);\n      return item;\n    });\n  },\n\n  getNavItems(id){\n    if(id){\n      let ni = _.find(nav_items, (ni)=>ni.id === id)\n      if(ni) return ni.items\n    }\n\n    return _.first(nav_items).items\n  },\n\n  setNavItems(id, items){\n    nav_items = _.map(nav_items, (ni)=>{\n      if(ni.id === id){\n        ni.items = items;\n      }\n      return ni;\n    })\n  },\n\n  setItems(items){\n    return _.map(items, (item)=>{\n      if(!_.has(item, \"active\")) item.active = false;\n      if(!_.has(item, \"id\")) item.id = _.uniqueId();\n      return item;\n    })\n  }\n}\n\n\nconst NavStore = assign({}, EventEmitter.prototype, store);\n\nconst registeredCallback = function(payload) {\n  let action = payload.action;\n  switch(action.type) {\n    case \"ADDING_NAV\":\n      NavStore.addNavItems(action.nav, action.id);\n      NavStore.emitChange(\"adding\");\n      break;\n\n    case \"CHANGE_ACTIVE\":\n      NavStore.changeActive(action.id, action.nav_id);\n      NavStore.emitChange(\"change\");\n      break;\n\n    case \"UPDATE_NAV\":\n      NavStore.setNavItems(action.id, action.nav);\n      NavStore.emitChange(\"update\");\n      break;\n    }\n};\n\nNavStore.dispatchToken = NavDispatcher.register(registeredCallback);\nNavStore.setMaxListeners(0);\n\nmodule.exports = NavStore;"]}